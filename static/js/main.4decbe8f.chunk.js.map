{"version":3,"sources":["components/Section/Section.jsx","components/App.jsx","index.js"],"names":["Section","title","children","App","state","good","props","initialValue","neutral","bad","updateStatistic","event","grade","currentTarget","name","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAAaA,EAAU,SAAVA,EAAW,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACrB,eAACF,EAAD,WACE,6BAAKC,IACJC,MCCQC,EAAb,4MAKEC,MAAQ,CACNC,KAAM,EAAKC,MAAMC,aACjBC,QAAS,EAAKF,MAAMC,aACpBE,IAAK,EAAKH,MAAMC,cARpB,EAWEG,gBAAkB,SAACC,GACjB,IAAMC,EAAQD,EAAME,cAAcC,KAElC,EAAKC,UAAS,SAAAC,GAAS,sBACpBJ,EAAQI,EAAUJ,GAAS,OAflC,EAmBEK,mBAAqB,WACnB,MAA+B,EAAKb,MAEpC,OAFA,EAAQC,KAAR,EAAcG,QAAd,EAAuBC,KApB3B,EAyBES,gCAAkC,WAChC,MAA+B,EAAKd,MAA5BC,EAAR,EAAQA,KAAMG,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAKvB,OAFmBA,EAAOA,GADZJ,EAAOG,EAAUC,GACS,IAAO,KA7BnD,4CAkCE,WAKE,OACE,qCACE,cAAC,EAAD,CAASR,MAAM,0BAGf,cAAC,EAAD,CAASA,MAAM,sBA5CvB,GAAyBkB,aAAZhB,EACJiB,aAAe,CACpBb,aAAc,GCDlBc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4decbe8f.chunk.js","sourcesContent":["export const Section = ({ title, children }) => (\r\n  <Section>\r\n    <h1>{title}</h1>\r\n    {children}\r\n  </Section>\r\n)\r\n","import { Component } from 'react';\nimport { Section } from 'components/Section/Section';\n// import { Statistics } from 'components/Statistics/Statistics';\n\nexport class App extends Component {\n  static defaultProps = {\n    initialValue: 0\n  };\n\n  state = {\n    good: this.props.initialValue,\n    neutral: this.props.initialValue,\n    bad: this.props.initialValue,\n  };\n\n  updateStatistic = (event) => {\n    const grade = event.currentTarget.name;\n\n    this.setState(prevState => ({\n      [grade]: prevState[grade] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad;\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n\n    const total = good + neutral + bad;\n    const percentage = bad ? (bad / total * 100) : 100;\n\n    return percentage;\n  }\n\n  render() {\n    // const { good, neutral, bad } = this.state;\n    // const total = this.countTotalFeedback();\n    // const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          {/* <FeedbackOptions options={} onLeaveFeedback={}> */}\n        </Section>\n        <Section title=\"Statistics\">\n          {/* <Statistics good={} neutral={} bad={} total={} positivePercentage={}> */}\n        </Section>\n        {/* <Notification message=\"No feedback given\"> */}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}